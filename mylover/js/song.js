var songContent = '[00:00.00]我的世界已坠入爱河\n [00:04.45]闪光的箭 刺穿我的心脏\n [00:08.13]好想要了解你的全部\n [00:11.33]「呐，告诉我」\n [00:16.27]我的世界已坠入爱河\n[00:30.27]对那擦肩而过的话语略有些后悔\n [00:35.81]泪水零落\n [00:37.72]将那忙碌的感情和心跳相连\n [00:43.20]调和旋律 好想得到确认啊\n [00:52.47]被目的所拘束\n [00:56.14]重要的事却模糊淡去\n [00:59.85]今天又将是崭新的一天\n [01:07.21]我的世界已坠入爱河\n [01:10.90]闪光的箭 刺穿我的心脏\n [01:14.61]好想要了解你的全部\n [01:17.80]「呐，让我听听吧」\n [01:22.02]即使一毫米也太过遥远\n [01:25.67]这呼啸而过的青春\n [01:29.36]不想忘记也无法忘记\n [01:33.03]那闪耀着光芒的一页\n [01:51.49]那看起来很般配的两人之间\n [01:56.99]似乎有着复杂的感情\n [01:58.96]将那初萌的感情和心跳相连\n [02:04.38]体温计 是不是坏了呢？\n [02:13.70]连自己的心情都不了解\n [02:17.40]却向她提供了建议\n[02:21.12]心脏隐隐作痛   [02:26.49]我的世界已坠入爱河\n [02:30.24]闪光的箭 刺穿我的心脏\n [02:33.96]终于注意到的这份感情\n [02:37.23]「已经，来不及了」\n [02:41.40]她比起我更加动人\n [02:45.03]我明明知道这点\n [02:48.77]「不要进行得太顺利啊」之类的想法……\n [02:52.43]已经逃离的我又何必\n [02:55.68]笨蛋！\n [02:57.12]好想了解你的全部啊\n [02:59.30]我才注意到这就是恋爱\n [03:01.51]请一定回头看看我\n [03:03.52]虽然有些迟了，但是我不想放弃\n [03:06.57]因为……\n [03:07.78]我喜欢你\n [03:08.99]春天盛开的花朵恋爱了\n [03:16.48]它们竭力抬起头，绽开了笑容\n [03:23.80]夏天青涩的花蕾也恋爱了\n [03:30.94]无法开放的花，与火药的气息\n [03:53.34]将真心的感情化为语言\n [03:57.01]将重要的事说出来的话\n [04:00.71]今天又将是崭新的一天\n [04:08.16]正因为你有些迟钝\n [04:11.76]所以我一定要亲口传达\n [04:15.53]现在，我就要告诉你\n [04:18.71]「呐，我喜欢你」\n [04:22.90]我的世界已坠入爱河\n [04:26.54]闪光的箭 刺穿我的心脏\n [04:30.25]好想要了解你的全部\n [04:33.51]呐，让我听听吧」\n [04:37.65]用力将你拉近至零距离\n [04:41.38]这呼啸而过的青春\n [04:45.00]不想忘记也无法忘记\n [04:48.72]那闪耀着光芒的一页\n [04:52.89]小可爱我爱你\n [05:07.39]\n'
var songContent1 = '' ;
function parseLyric(text) {
    //将文本分隔成一行一行，存入数组
    var lines = text.split('\n'),
        //用于匹配时间的正则表达式，匹配的结果类似[xx:xx.xx]
        pattern = /\[\d{2}:\d{2}.\d{2}\]/g,
        //保存最终结果的数组
        result = [];
    //去掉不含时间的行
    while (!pattern.test(lines[0])) {
        lines = lines.slice(1);
    };
    //上面用'\n'生成生成数组时，结果中最后一个为空元素，这里将去掉
    lines[lines.length - 1].length === 0 && lines.pop();
    lines.forEach(function(v /*数组元素值*/ , i /*元素索引*/ , a /*数组本身*/ ) {
        //提取出时间[xx:xx.xx]
        var time = v.match(pattern),
            //提取歌词
            value = v.replace(pattern, '');
        //因为一行里面可能有多个时间，所以time有可能是[xx:xx.xx][xx:xx.xx][xx:xx.xx]的形式，需要进一步分隔
        time.forEach(function(v1, i1, a1) {
            //去掉时间里的中括号得到xx:xx.xx
            var t = v1.slice(1, -1).split(':');
            //将结果压入最终数组
            result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);
        });
    });
    //最后将结果数组中的元素按时间大小排序，以便保存之后正常显示歌词
    result.sort(function(a, b) {
        return a[0] - b[0];
    });
    return result;
}

