var songContent = '[00:00.00]爱殇  \n [00:11.00]在错误的时间里\n [00:13.40]遇到了错误的人\n [00:16.00]错到让我只能以眼泪的形式来将你铭记\n [00:30.48]暮色起看天边斜阳\n [00:40.31]恍惚想起你的脸庞\n [00:45.28]毕竟回想 难免徒增感伤\n [00:51.78]轻声叹 我们那些好时光\n [00:59.72]夜未央繁星落眼眶\n [01:06.35]拾一段柔软的光芒\n [01:12.53]清风过 曳烛光\n [01:15.71]独舞无人欣赏 留花瓣随风飘荡\n [01:30.04]我要将过往都储藏\n [01:36.40] 编一段美丽的梦想\n [01:42.95]也许幻象 到最后会更伤\n [01:49.58]假欢畅 又何妨 无人共享\n [01:57.52]你曾经是我的边疆\n [02:04.55]抵抗我所有的悲伤\n [02:09.93]西风残 故人往\n [02:13.31]如今被爱流放 困在了眼泪中央\n [02:24.44]啊…… 啊……\n [02:37.54]啊…… 啊………\n [03:10.54]爱殇\n [03:21.78]暮色起看天边斜阳\n [03:28.92]夜未央星河独流淌\n [03:34.70]天晴朗 好风光\n [03:38.88]若你不在身旁 能上苍穹又怎样\n [03:48.89]船过空港 将寂寞豢养\n [03:55.76] 旷野霜降 低垂了泪光\n [04:02.51]啊…… 啊……\n [04:10.70]啊…… 啊………\n [04:15.87]扬帆远航 亦不过彷徨\n [04:22.81]奈何流放 敌不过苍凉\n [04:29.62]啊…… 啊……\n [04:37.06]啊…… 啊………\n [04:43.40]唯有你是我的天堂\n[04:55.00]End\n'
var songContent1 = '' ;
function parseLyric(text) {
    //将文本分隔成一行一行，存入数组
    var lines = text.split('\n'),
        //用于匹配时间的正则表达式，匹配的结果类似[xx:xx.xx]
        pattern = /\[\d{2}:\d{2}.\d{2}\]/g,
        //保存最终结果的数组
        result = [];
    //去掉不含时间的行
    while (!pattern.test(lines[0])) {
        lines = lines.slice(1);
    };
    //上面用'\n'生成生成数组时，结果中最后一个为空元素，这里将去掉
    lines[lines.length - 1].length === 0 && lines.pop();
    lines.forEach(function(v /*数组元素值*/ , i /*元素索引*/ , a /*数组本身*/ ) {
        //提取出时间[xx:xx.xx]
        var time = v.match(pattern),
            //提取歌词
            value = v.replace(pattern, '');
        //因为一行里面可能有多个时间，所以time有可能是[xx:xx.xx][xx:xx.xx][xx:xx.xx]的形式，需要进一步分隔
        time.forEach(function(v1, i1, a1) {
            //去掉时间里的中括号得到xx:xx.xx
            var t = v1.slice(1, -1).split(':');
            //将结果压入最终数组
            result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);
        });
    });
    //最后将结果数组中的元素按时间大小排序，以便保存之后正常显示歌词
    result.sort(function(a, b) {
        return a[0] - b[0];
    });
    return result;
}

